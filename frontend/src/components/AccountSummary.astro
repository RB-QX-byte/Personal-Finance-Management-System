---
export interface Props {
  accounts?: Array<{
    id: string;
    name: string;
    balance: number;
    account_type: string;
  }>;
  currency?: string;
}

const { 
  accounts = [],
  currency = '$'
} = Astro.props;

const totalBalance = accounts.reduce((sum, account) => sum + account.balance, 0);

const getAccountIcon = (type: string) => {
  switch (type) {
    case 'checking':
      return 'M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2 2v-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10';
    case 'savings':
      return 'M3 6l3 1m0 0l-3 9a5.002 5.002 0 006.001 0M6 7l3 9M6 7l6-2m6 2l3-1m-3 1l-3 9a5.002 5.002 0 006.001 0M18 7l3 9m-3-9l-6-2m0-2v2m0 16V5m0 16l-3-9';
    case 'credit_card':
      return 'M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z';
    case 'investment':
      return 'M7 12l3-3 3 3 4-4M8 21l4-4 4 4M3 4h18M4 4h16v12a1 1 0 01-1 1H5a1 1 0 01-1-1V4z';
    case 'loan':
      return 'M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1';
    default:
      return 'M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2 2v-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10';
  }
};

const getBalanceColor = (balance: number) => {
  if (balance < 0) return 'text-danger-600';
  if (balance > 1000) return 'text-success-600';
  return 'text-gray-900';
};
---

<div class="bg-white rounded-lg shadow-sm p-6 border border-gray-200">
  <div class="flex items-center justify-between mb-6">
    <h3 class="text-lg font-semibold text-gray-900">Account Summary</h3>
    <a href="/accounts" class="text-primary-600 hover:text-primary-700 text-sm font-medium">
      Manage
    </a>
  </div>
  
  <div class="space-y-4">
    {accounts.map((account) => (
      <div class="flex items-center justify-between p-3 rounded-lg hover:bg-gray-50 transition-colors">
        <div class="flex items-center space-x-3">
          <div class="w-10 h-10 bg-gray-100 rounded-full flex items-center justify-center">
            <svg class="w-5 h-5 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d={getAccountIcon(account.account_type)}></path>
            </svg>
          </div>
          <div>
            <p class="text-sm font-medium text-gray-900">{account.name}</p>
            <p class="text-xs text-gray-500 capitalize">{account.account_type.replace('_', ' ')}</p>
          </div>
        </div>
        <div class="text-right">
          <p class={`text-sm font-semibold ${getBalanceColor(account.balance)}`}>
            {currency}{Math.abs(account.balance).toLocaleString()}
          </p>
          {account.balance < 0 && (
            <p class="text-xs text-danger-500">Credit</p>
          )}
        </div>
      </div>
    ))}
  </div>
  
  <div class="mt-6 pt-4 border-t border-gray-200">
    <div class="flex justify-between items-center">
      <span class="text-sm font-medium text-gray-900">Total Balance</span>
      <span class={`text-lg font-bold ${getBalanceColor(totalBalance)}`}>
        {currency}{totalBalance.toLocaleString()}
      </span>
    </div>
  </div>
  
  <div class="mt-4 flex space-x-3">
    <a href="/accounts" class="flex-1 bg-primary-600 hover:bg-primary-700 text-white py-2 px-4 rounded-md text-sm font-medium transition-colors text-center">
      Add Account
    </a>
    <a href="/accounts" class="flex-1 bg-gray-100 hover:bg-gray-200 text-gray-700 py-2 px-4 rounded-md text-sm font-medium transition-colors text-center">
      View All
    </a>
  </div>
</div>