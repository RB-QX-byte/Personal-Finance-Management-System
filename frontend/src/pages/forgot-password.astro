---
export const prerender = false;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Forgot Password - Personal Finance Management</title>
    <script src="https://cdn.tailwindcss.com"></script>
  </head>
  <body class="bg-gray-50 min-h-screen flex items-center justify-center">
    <div class="max-w-md w-full space-y-8 p-8">
      <!-- Header -->
      <div class="text-center">
        <h2 class="text-3xl font-bold text-gray-900">Reset your password</h2>
        <p class="mt-2 text-sm text-gray-600">
          Enter your email address and we'll send you a link to reset your password.
        </p>
      </div>

      <!-- Forgot Password Form -->
      <form id="forgot-password-form" class="mt-8 space-y-6">
        <div>
          <label for="email" class="block text-sm font-medium text-gray-700">
            Email address
          </label>
          <input
            id="email"
            name="email"
            type="email"
            autocomplete="email"
            required
            class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
            placeholder="Enter your email"
          />
          <div id="email-error" class="mt-1 text-sm text-red-600 hidden"></div>
        </div>

        <div>
          <button
            type="submit"
            id="submit-btn"
            class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed"
          >
            <span id="submit-text">Send reset link</span>
            <svg id="loading-spinner" class="animate-spin -ml-1 mr-3 h-5 w-5 text-white hidden" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
              <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
              <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
            </svg>
          </button>
        </div>

        <!-- Success Message -->
        <div id="success-message" class="hidden">
          <div class="rounded-md bg-green-50 p-4">
            <div class="flex">
              <div class="flex-shrink-0">
                <svg class="h-5 w-5 text-green-400" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                </svg>
              </div>
              <div class="ml-3">
                <h3 class="text-sm font-medium text-green-800">
                  Reset link sent!
                </h3>
                <div class="mt-2 text-sm text-green-700">
                  <p>Check your email for password reset instructions.</p>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Error Message -->
        <div id="error-message" class="hidden">
          <div class="rounded-md bg-red-50 p-4">
            <div class="flex">
              <div class="flex-shrink-0">
                <svg class="h-5 w-5 text-red-400" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
                </svg>
              </div>
              <div class="ml-3">
                <h3 class="text-sm font-medium text-red-800">
                  Error sending reset link
                </h3>
                <div class="mt-2 text-sm text-red-700">
                  <p id="error-text">Please try again later.</p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </form>

      <!-- Back to Login Link -->
      <div class="text-center">
        <a href="/login" class="text-sm text-blue-600 hover:text-blue-500">
          ‚Üê Back to login
        </a>
      </div>
    </div>

    <script>
      import { supabase } from '../lib/supabase';

      class ForgotPasswordForm {
        constructor() {
          this.form = document.getElementById('forgot-password-form');
          this.emailInput = document.getElementById('email');
          this.submitBtn = document.getElementById('submit-btn');
          this.submitText = document.getElementById('submit-text');
          this.loadingSpinner = document.getElementById('loading-spinner');
          this.successMessage = document.getElementById('success-message');
          this.errorMessage = document.getElementById('error-message');
          this.errorText = document.getElementById('error-text');
          this.emailError = document.getElementById('email-error');

          this.bindEvents();
        }

        bindEvents() {
          this.form.addEventListener('submit', (e) => this.handleSubmit(e));
          this.emailInput.addEventListener('input', () => this.clearErrors());
        }

        clearErrors() {
          this.emailError.classList.add('hidden');
          this.errorMessage.classList.add('hidden');
          this.successMessage.classList.add('hidden');
        }

        setLoading(loading) {
          this.submitBtn.disabled = loading;
          if (loading) {
            this.submitText.textContent = 'Sending...';
            this.loadingSpinner.classList.remove('hidden');
          } else {
            this.submitText.textContent = 'Send reset link';
            this.loadingSpinner.classList.add('hidden');
          }
        }

        showError(message) {
          this.errorText.textContent = message;
          this.errorMessage.classList.remove('hidden');
          this.successMessage.classList.add('hidden');
        }

        showSuccess() {
          this.successMessage.classList.remove('hidden');
          this.errorMessage.classList.add('hidden');
        }

        validateEmail(email) {
          const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
          return emailRegex.test(email);
        }

        async handleSubmit(e) {
          e.preventDefault();
          this.clearErrors();

          const email = this.emailInput.value.trim();

          // Client-side validation
          if (!email) {
            this.emailError.textContent = 'Email is required';
            this.emailError.classList.remove('hidden');
            return;
          }

          if (!this.validateEmail(email)) {
            this.emailError.textContent = 'Please enter a valid email address';
            this.emailError.classList.remove('hidden');
            return;
          }

          this.setLoading(true);

          try {
            // Use Supabase client-side password reset
            const { error } = await supabase.auth.resetPasswordForEmail(email, {
              redirectTo: `${window.location.origin}/reset-password`,
            });

            if (error) {
              throw error;
            }

            // Also call backend endpoint for additional processing
            try {
              await fetch('/api/auth/forgot-password', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify({ email }),
              });
            } catch (backendError) {
              console.warn('Backend forgot password endpoint failed:', backendError);
              // Don't fail the whole process if backend fails
            }

            this.showSuccess();
            this.form.reset();

          } catch (error) {
            console.error('Password reset error:', error);
            this.showError(error.message || 'Failed to send reset link. Please try again.');
          } finally {
            this.setLoading(false);
          }
        }
      }

      // Initialize form when DOM is loaded
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', () => new ForgotPasswordForm());
      } else {
        new ForgotPasswordForm();
      }
    </script>
  </body>
</html>